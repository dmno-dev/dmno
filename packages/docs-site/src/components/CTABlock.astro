---
import DIcon from "@/components/DIcon.astro";
import TileButton from "@/components/TileButton.vue";

interface Props {
  text?: string;
  href?: string;
  command?: string;
}

const { text, href, command } = Astro.props as Props;
---

<div class="cta-block">
  {href && text && <TileButton href={href}>{text}</TileButton>}
  {
    command && (
      <div class="install-command">
        <DIcon name="console" />
        <div>{command}</div>
        <DIcon name={["copy", "check"]} class="install-command__copy" />
      </div>
    )
  }
</div>

<style lang="less">
  @property --spin-angle {
    syntax: "<angle>";
    initial-value: 0deg;
    inherits: true;
  }
  @keyframes spin {
    0% {
      --spin-angle: 0deg;
    }
    100% {
      --spin-angle: 360deg;
    }
  }

  .cta-block {
    display: flex;
    flex-wrap: wrap;
    // flex-direction: column;
    justify-content: center;
    gap: 1rem;

    @media (min-width: 50rem) {
      flex-direction: row;
      gap: 2rem;
    }
  }

  .install-command {
    display: flex;
    font-size: 18px;
    height: 48px;
    border: 1px solid var(--brand-pink);

    align-items: center;
    padding-right: 64px;
    font-weight: bold;
    background: black;
    position: relative;
    font-family: var(--code-font);
    text-wrap: nowrap;

    --glow-color: var(--brand-yellow);
    animation: spin 5s linear infinite;
    html[data-theme="light"] & {
      // background: rgba(0, 0, 0, 0.2);
      background: color-mix(in oklab, var(--brand-cyan) 10%, white);
      color: black;
      --glow-color: var(--brand-cyan);
    }

    border: 1px solid var(--brand-green);
    border-image-source: conic-gradient(
      from calc(var(--spin-angle) + 180deg),
      var(--glow-color) 0deg,
      var(--brand-green) 45deg,
      var(--brand-green) 315deg,
      var(--glow-color) 360deg
    );
    border-image-slice: 1;

    // glow
    &:before {
      content: "";
      inset: 0;
      position: absolute;
      background: red;
      z-index: -1;
      filter: blur(3px);
      background: conic-gradient(
        from var(--spin-angle),
        var(--glow-color) 0deg,
        transparent 45deg,
        transparent 315deg,
        var(--glow-color) 360deg
      );
    }

    :global(.d-icon) {
      height: 44px;
      width: 44px;
      flex-shrink: 0;

      // console/cli caret
      &:first-child {
        width: 36px;
        padding: 8px;
      }

      // copy icon
      &:last-child {
        position: absolute;
        right: 0px;
        top: 0px;
        padding: 8px;
        &:hover {
          color: var(--brand-pink);
          cursor: pointer;
        }
      }
    }
    .install-command__copy.--success {
      color: var(--brand-green) !important;
      :global(svg:nth-child(1)) {
        display: none;
      }
      :global(svg:nth-child(2)) {
        display: block;
      }
    }
  }
</style>

<script>
  document
    .querySelector(".install-command__copy")
    ?.addEventListener("click", async (e) => {
      await navigator.clipboard.writeText("npx dmno init");
      if (e.target instanceof Element) {
        e.target.classList.add("--success");
        setTimeout(() => {
          (e.target as Element).classList.remove("--success");
        }, 2000);
      }
    });
</script>
