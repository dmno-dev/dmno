---
import { Tabs, TabItem, Code } from "@astrojs/starlight/components";
// import DmnoTabs from "./DmnoTabs.astro";
import { currentPm } from "./store";

const { packageName, command } = Astro.props;

const variant = packageName ? "packageName" : "command";
const platforms = [
  {
    name: "npm",
    packageName: `npm add ${packageName}`,
    command: `npm exec -- ${command}`,
  },
  {
    name: "pnpm",
    packageName: `pnpm add ${packageName}`,
    command: `pnpm exec ${command}`,
  },
  {
    name: "Yarn",
    packageName: `yarn add ${packageName}`,
    command: `yarn exec ${command}`,
  },
];
---

<Tabs>
  {
    platforms.map((platform) => (
      <TabItem
        label={platform.name}
        aria-selected={platform.name == "pnpm" ? true : ""}
      >
        <Code lang="bash" code={platform[variant]} />
      </TabItem>
    ))
  }
</Tabs>

<script>
  import { currentPm, getCurrentPm, setCurrentPm } from "./store";
  const selector = ".main-frame > * .tablist-wrapper > ul > li > a";
  let activeTab = getCurrentPm();
  // fake a click event to show the correct tab based on contents of the page
  document.addEventListener("DOMContentLoaded", (e) => {
    const tabs = Array.from(
      document.querySelectorAll(selector),
    ) as HTMLElement[];
    const pnpmTabs = tabs.filter((tab) => tab.innerText === activeTab);
    // click each of the tabs
    pnpmTabs.map((tab) => tab.click());
    pnpmTabs[pnpmTabs.length - 1].blur();
    e.preventDefault();
  });

  // update other tabs after any tab is clicked
  document.addEventListener("click", (e) => {
    const tabs = Array.from(document.querySelectorAll(selector));
    const tabNames = tabs.map((tab) => (tab as any).innerText);
    const val = (e?.target as any)?.innerText;
    if (tabNames.indexOf(val) < 0) return;
    if (val == activeTab) return;
    setCurrentPm(val);
    activeTab = val;
    e.preventDefault();
  });

  currentPm.listen((value) => {
    if (activeTab != value) {
      const tabs = Array.from(
        document.querySelectorAll(selector),
      ) as HTMLElement[];
      const pnpmTabs = tabs.filter((tab) => tab.innerText === value);
      pnpmTabs.map((tab) => tab.click());
    }
  });
</script>
