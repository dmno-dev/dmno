---
import { Tabs, TabItem, Code } from "@astrojs/starlight/components";
// import DmnoTabs from "./DmnoTabs.astro";

const { packageName, command, dynamicExec } = Astro.props;

let variant;
switch (true) {
  case Boolean(packageName):
    variant = "packageName";
    break;
  case Boolean(command):
    variant = "command";
    break;
  default:
    variant = "dynamicExec";
    break;
}; 

const platforms = [
  {
    name: "npm",
    packageName: `npm add ${packageName}`,
    command: `npm exec -- ${command}`,
    dynamicExec: `npx ${dynamicExec}`,

  },
  {
    name: "pnpm",
    packageName: `pnpm add ${packageName}`,
    command: `pnpm exec ${command}`,
    dynamicExec: `pnpm dlx ${dynamicExec}`,
  },
  {
    name: "Yarn",
    packageName: `yarn add ${packageName}`,
    command: `yarn exec -- ${command}`,
    dynamicExec: `yarn dlx ${dynamicExec}`,
  },
];
---

<Tabs syncKey="packageManager">
  {
    platforms.map((platform) => (
      <TabItem label={platform.name}>
        <Code lang="bash" code={platform[variant as keyof typeof platform]} />
      </TabItem>
    ))
  }
</Tabs>

<script>
  import { currentPm, getCurrentPm, setCurrentPm } from "./store";
  const selector = ".main-frame > * .tablist-wrapper > ul > li > a";
  let activeTab = getCurrentPm();
  // fake a click event to show the correct tab based on contents of the page
  document.addEventListener("DOMContentLoaded", (e) => {
    const tabs = Array.from(
      document.querySelectorAll(selector),
    ) as HTMLElement[];
    const pnpmTabs = tabs.filter((tab) => tab.innerText === activeTab);
    clickAndBlur(pnpmTabs[0]);
  });

  // update store
  document.addEventListener("click", (e) => {
    const val = (e?.target as any)?.innerText;
    setCurrentPm(val);
    // e.preventDefault();
  });

  currentPm.listen((value) => {
    if (activeTab != value) {
      const tabs = Array.from(
        document.querySelectorAll(selector),
      ) as HTMLElement[];
      const pnpmTabs = tabs.filter((tab) => tab.innerText === value);
      clickAndBlur(pnpmTabs[0]);
    }
  });

  const clickAndBlur = (el: HTMLElement) => {
    // click the first tab to show the correct tab, then blur it
    // syncKey="packageManager" will handle the rest
    el?.click();
    el?.blur();
  };
</script>
