---
import type { Props } from "@astrojs/starlight/props";

import LanguageSelect from "@astrojs/starlight/components/LanguageSelect.astro";
import Search from "@astrojs/starlight/components/Search.astro";
import SocialIcons from "@astrojs/starlight/components/SocialIcons.astro";

import ThemeSelect from "./ThemeSelect.vue";

import config from "virtual:starlight/user-config";

import { DmnoTileLogo } from "@dmno/ui-lib";
import DIcon from "./DIcon.astro";
// import { Icon } from "@astrojs/starlight/components";
// import { Icon } from "@iconify/vue";

// TODO: use an icon component?
import FolderIcon from "~icons/material-symbols/folder";
import FolderOpenIcon from "~icons/material-symbols/folder-open";

/**
 * Render the `Search` component if Pagefind is enabled or the default search component has been overridden.
 */
const shouldRenderSearch = true;
// config.pagefind ||
// config.components.Search !== "@astrojs/starlight/components/Search.astro";
---

<div class="header sl-flex">
  <div class="title-wrapper sl-flex">
    <a href="/" class="site-title sl-flex">
      <DmnoTileLogo client:load />
      <span
        class:list={{
          "sr-only": config.logo?.replacesTitle,
          "logo-font": true,
          "logo-dmno-text": true,
        }}
      >
        DMNO
      </span>
    </a>
  </div>
  <nav>
    <a href="/docs" title="cd ./.docs">
      <DIcon
        name={Astro.url.pathname.startsWith("/docs") ? "folder-open" : "folder"}
      />
      .docs
    </a>
    <a href="/blog" title="cd ./.blog">
      <DIcon
        name={Astro.url.pathname.startsWith("/blog") ? "folder-open" : "folder"}
      />
      .blog
    </a>
  </nav>
  <div class="sl-flex">
    {shouldRenderSearch && <Search {...Astro.props} />}
  </div>
  <div class="sl-hidden md:sl-flex right-group">
    <div class="sl-flex social-icons">
      <a href={DMNO_PUBLIC_CONFIG.GITHUB_REPO_URL}><DIcon name="github" /></a>
      <a href={DMNO_PUBLIC_CONFIG.DISCORD_JOIN_URL}><DIcon name="discord" /></a>
    </div>
    <ThemeSelect client:load />
    <LanguageSelect {...Astro.props} />
  </div>
</div>

<style>
  .header {
    --color-one: hsl(131, 88%, 54%);
    --color-two: hsl(181, 82%, 51%);
  }
  .site-title {
    align-items: center;
    /* gap: var(--sl-nav-gap); */
    gap: 10px;
    font-size: 26px;
    font-weight: 600;
    /* color: var(--sl-color-text-accent); */
    color: white;
    text-decoration: none;
    white-space: nowrap;
  }
  .site-title :global(.dmno-tile-logo) {
    height: calc(var(--sl-nav-height) - 2 * var(--sl-nav-pad-y));
  }

  @media (prefers-reduced-motion: no-preference) {
    .site-title:hover .logo-dmno-text {
      animation: move-bg 8s linear infinite;
      --bg-size: 400%;

      background: linear-gradient(
          90deg,
          var(--color-one),
          var(--color-two),
          var(--color-one)
        )
        0 0 / var(--bg-size) 100%;
      background-clip: text;
      color: transparent;
    }

    .site-title:hover :global(.dmno-tile-logo__d),
    .site-title:hover :global(.dots-loader > div) {
      animation: move-bg 8s linear infinite;
      --bg-size: 400%;

      background: linear-gradient(
          90deg,
          var(--color-one),
          var(--color-two),
          var(--color-one)
        )
        0 0 / var(--bg-size) 100%;
    }

    @keyframes move-bg {
      to {
        background-position: var(--bg-size) 0;
      }
    }
  }

  .header > nav {
    display: flex;
    width: auto;
    > a {
      padding: 0 0.5em;
      margin: 0 0.5em;
      text-decoration: none;
      display: flex;
      gap: 8px;
      align-items: center;
      &:hover {
        color: var(--brand-pink);
      }
    }
    .d-icon {
      /* background: red; */
      height: 20px;
      width: 20px;
    }
  }

  .header {
    gap: var(--sl-nav-gap);
    justify-content: space-between;
    align-items: center;
    height: 100%;
    color: white;

    a {
      color: inherit;
    }
  }
  :global(html[data-theme="light"]) .header {
    color: #222;
  }

  .title-wrapper {
    /* Prevent long titles overflowing and covering the search and menu buttons on narrow viewports. */
    overflow: hidden;
  }

  .right-group,
  .social-icons {
    gap: 1rem;
    align-items: center;
    > a {
      &:hover {
        color: var(--brand-pink);
        transform: scale(1.1);
      }
      .d-icon {
        width: 24px;
      }
    }
  }
  .social-icons::after {
    content: "";
    height: 2rem;
    border-inline-end: 1px solid var(--sl-color-gray-5);
  }

  @media (min-width: 50rem) {
    :global(:root[data-has-sidebar]) {
      --__sidebar-pad: calc(2 * var(--sl-nav-pad-x));
    }
    :global(:root:not([data-has-toc])) {
      --__toc-width: 0rem;
    }
    .header {
      --__sidebar-width: max(
        0rem,
        var(--sl-content-inline-start, 0rem) - var(--sl-nav-pad-x)
      );
      --__main-column-fr: calc(
        (
            100% + var(--__sidebar-pad, 0rem) -
              var(--__toc-width, var(--sl-sidebar-width)) -
              (2 * var(--__toc-width, var(--sl-nav-pad-x))) -
              var(--sl-content-inline-start, 0rem) - var(--sl-content-width)
          ) / 2
      );
      display: grid;
      grid-template-columns:
        /* 1 (site title): runs up until the main content columnâ€™s left edge or the width of the title, whichever is the largest  */
        minmax(
          calc(
            var(--__sidebar-width) +
              max(0rem, var(--__main-column-fr) - var(--sl-nav-gap))
          ),
          auto
        )
        /* 2 (search box): all free space that is available. */
        auto
        1fr
        /* 3 (right items): use the space that these need. */
        auto;
      align-content: center;
    }
  }
</style>
